buildscript {
    repositories {
        jcenter()
        maven {
            url 'https://artifactory.liveaction.com:443/artifactory/public'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
        maven {
            url 'https://artifactory.liveaction.com:443/artifactory/maven-public'
            credentials {
                username = "${artifactory_user}"
                password = "${artifactory_password}"
            }
        }
    }
    dependencies {
        //Check for the latest version here: http://plugins.gradle.org/plugin/com.jfrog.artifactory
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
        classpath 'me.champeau.gradle:gradle-javadoc-hotfix-plugin:0.1'
        classpath 'me.champeau.gradle:japicmp-gradle-plugin:0.1.0'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.1.0'
    }
}

ext {
    libs = [
            gson: 'com.google.code.gson:gson:2.8.5',
            hamcrest: 'org.hamcrest:hamcrest:2.1',
            jacksonDatabind: 'com.fasterxml.jackson.core:jackson-databind:2.9.8',
            jettison: 'org.codehaus.jettison:jettison:1.3.7',
            jsonOrg: 'org.json:json:20140107',
            jsonSmart: 'net.minidev:json-smart:2.3',
            slf4jApi: 'org.slf4j:slf4j-api:1.7.26',
            tapestryJson: 'org.apache.tapestry:tapestry-json:5.4.4',

            test: [
                    'commons-io:commons-io:2.4',
                    'junit:junit:4.12',
                    'org.assertj:assertj-core:3.11.1',
                    'org.hamcrest:hamcrest:2.1',
                    'org.slf4j:slf4j-simple:1.7.26'
            ]
    ]
    snapshotVersion = false
}

allprojects {

    apply plugin: "com.jfrog.artifactory"
    apply plugin: 'maven-publish'
    apply plugin: 'java'
    apply plugin: 'maven'
    // apply plugin: 'signing'

    ext.displayName = null
    ext.buildTimestamp = new Date().format('yyyy-MM-dd HH:mm:ss')

    group = 'com.jayway.jsonpath'
    version = '2.4.0-la' + (snapshotVersion ? "-SNAPSHOT" : "")

    if (JavaVersion.current().isJava8Compatible()) {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

    manifest {
		attributes 'provider': 'gradle'
	}
    configurations {
      published
    }
    // dependencies {
    //   testImplementation 'junit:junit:4.7'
    // }
    // task sourceJar(type: Jar) {
    //   from sourceSets.main.allSource
    //   classifier = 'sources'
    // }
    // task javadocJar(type: Jar, dependsOn: javadoc) {
    //   classifier = 'javadoc'
    //   from javadoc.destinationDir
    // }
    // artifactoryPublish {
    //   dependsOn sourceJar
    // //   , javadocJar
    // }
    // artifacts {
    //   published sourceJar
    // //   published javadocJar
    // }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                // artifactId = jar.archiveBaseName
            }
        }
    }
    // signing {
    //     sign publishing.publications.mavenJava
    // }


}

apply plugin: "com.jfrog.artifactory"
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'maven'
// apply plugin: 'signing'

// publishing {
//     publications {
//         mavenJava(MavenPublication) {
//             from components.java
//             // artifactId = jar.archiveBaseName
//         }
//     }
// }

configurations {
  published
}

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'releases'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
        defaults {
            publications ('mavenJava')
            publishConfigs('archives', 'published')
        }
        publishBuildInfo = true
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'public'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
            
        }
    }
}

subprojects {
    apply plugin: 'java'
    // apply plugin: 'signing'
    apply plugin: 'osgi'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    // signing {
    //     required { !snapshotVersion && gradle.taskGraph.hasTask("uploadArchives") }
    //     sign configurations.archives
    // }

    artifacts {
        archives jar, javadocJar, sourcesJar
    }
}

wrapper {
    gradleVersion = '5.6.2'
}

//Task used by Heroku for staging
task stage(dependsOn: [':json-path-web-test:clean', 'json-path-web-test:jar', 'json-path-web-test:shadowJar']) {}
apply from: "$rootDir/gradle/binaryCompatibility.gradle"